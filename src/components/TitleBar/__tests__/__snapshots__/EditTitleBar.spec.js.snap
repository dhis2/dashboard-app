// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditTitleBar renders correctly when displayName is provided 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditTitleBar
    classes={
      Object {
        "description": "description",
        "input": "input",
        "itemSelector": "itemSelector",
        "section": "section",
        "title": "title",
        "titleDescription": "titledesc",
        "underline": "underline",
      }
    }
    description="The blue one"
    displayName="Regnbue Dash"
    name="Rainbow Dash"
    onChangeDescription={[Function]}
    onChangeTitle={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="titledesc"
        >
          <InputField
            className="title"
            filled={true}
            label="Dashboard title"
            name="Dashboard title input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="text"
            value="Rainbow Dash"
          />
          <TextField
            InputProps={
              Object {
                "classes": Object {
                  "root": "input",
                  "underline": "underline",
                },
              }
            }
            className="description"
            label="Dashboard description"
            multiline={true}
            name="Dashboard description input"
            onChange={[Function]}
            required={false}
            select={false}
            value="The blue one"
            variant="filled"
          />
        </div>,
        <div
          className="itemSelector"
        >
          <itemselector />
        </div>,
      ],
      "className": "section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <InputField
              className="title"
              filled={true}
              label="Dashboard title"
              name="Dashboard title input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Rainbow Dash"
            />,
            <TextField
              InputProps={
                Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                }
              }
              className="description"
              label="Dashboard description"
              multiline={true}
              name="Dashboard description input"
              onChange={[Function]}
              required={false}
              select={false}
              value="The blue one"
              variant="filled"
            />,
          ],
          "className": "titledesc",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "title",
              "filled": true,
              "label": "Dashboard title",
              "name": "Dashboard title input",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "type": "text",
              "value": "Rainbow Dash",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "InputProps": Object {
                "classes": Object {
                  "root": "input",
                  "underline": "underline",
                },
              },
              "className": "description",
              "label": "Dashboard description",
              "multiline": true,
              "name": "Dashboard description input",
              "onChange": [Function],
              "required": false,
              "select": false,
              "value": "The blue one",
              "variant": "filled",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <itemselector />,
          "className": "itemSelector",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "itemselector",
        },
        "type": "div",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="titledesc"
          >
            <InputField
              className="title"
              filled={true}
              label="Dashboard title"
              name="Dashboard title input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Rainbow Dash"
            />
            <TextField
              InputProps={
                Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                }
              }
              className="description"
              label="Dashboard description"
              multiline={true}
              name="Dashboard description input"
              onChange={[Function]}
              required={false}
              select={false}
              value="The blue one"
              variant="filled"
            />
          </div>,
          <div
            className="itemSelector"
          >
            <itemselector />
          </div>,
        ],
        "className": "section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <InputField
                className="title"
                filled={true}
                label="Dashboard title"
                name="Dashboard title input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value="Rainbow Dash"
              />,
              <TextField
                InputProps={
                  Object {
                    "classes": Object {
                      "root": "input",
                      "underline": "underline",
                    },
                  }
                }
                className="description"
                label="Dashboard description"
                multiline={true}
                name="Dashboard description input"
                onChange={[Function]}
                required={false}
                select={false}
                value="The blue one"
                variant="filled"
              />,
            ],
            "className": "titledesc",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "title",
                "filled": true,
                "label": "Dashboard title",
                "name": "Dashboard title input",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "type": "text",
                "value": "Rainbow Dash",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "InputProps": Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                },
                "className": "description",
                "label": "Dashboard description",
                "multiline": true,
                "name": "Dashboard description input",
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "The blue one",
                "variant": "filled",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <itemselector />,
            "className": "itemSelector",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "itemselector",
          },
          "type": "div",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`EditTitleBar renders correctly when displayName not provided 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditTitleBar
    classes={
      Object {
        "description": "description",
        "input": "input",
        "itemSelector": "itemSelector",
        "section": "section",
        "title": "title",
        "titleDescription": "titledesc",
        "underline": "underline",
      }
    }
    description="The blue one"
    name="Rainbow Dash"
    onChangeDescription={[Function]}
    onChangeTitle={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="titledesc"
        >
          <InputField
            className="title"
            filled={true}
            label="Dashboard title"
            name="Dashboard title input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="text"
            value="Rainbow Dash"
          />
          <TextField
            InputProps={
              Object {
                "classes": Object {
                  "root": "input",
                  "underline": "underline",
                },
              }
            }
            className="description"
            label="Dashboard description"
            multiline={true}
            name="Dashboard description input"
            onChange={[Function]}
            required={false}
            select={false}
            value="The blue one"
            variant="filled"
          />
        </div>,
        <div
          className="itemSelector"
        >
          <itemselector />
        </div>,
      ],
      "className": "section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <InputField
              className="title"
              filled={true}
              label="Dashboard title"
              name="Dashboard title input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Rainbow Dash"
            />,
            <TextField
              InputProps={
                Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                }
              }
              className="description"
              label="Dashboard description"
              multiline={true}
              name="Dashboard description input"
              onChange={[Function]}
              required={false}
              select={false}
              value="The blue one"
              variant="filled"
            />,
          ],
          "className": "titledesc",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "title",
              "filled": true,
              "label": "Dashboard title",
              "name": "Dashboard title input",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "type": "text",
              "value": "Rainbow Dash",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "InputProps": Object {
                "classes": Object {
                  "root": "input",
                  "underline": "underline",
                },
              },
              "className": "description",
              "label": "Dashboard description",
              "multiline": true,
              "name": "Dashboard description input",
              "onChange": [Function],
              "required": false,
              "select": false,
              "value": "The blue one",
              "variant": "filled",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <itemselector />,
          "className": "itemSelector",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "itemselector",
        },
        "type": "div",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="titledesc"
          >
            <InputField
              className="title"
              filled={true}
              label="Dashboard title"
              name="Dashboard title input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Rainbow Dash"
            />
            <TextField
              InputProps={
                Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                }
              }
              className="description"
              label="Dashboard description"
              multiline={true}
              name="Dashboard description input"
              onChange={[Function]}
              required={false}
              select={false}
              value="The blue one"
              variant="filled"
            />
          </div>,
          <div
            className="itemSelector"
          >
            <itemselector />
          </div>,
        ],
        "className": "section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <InputField
                className="title"
                filled={true}
                label="Dashboard title"
                name="Dashboard title input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value="Rainbow Dash"
              />,
              <TextField
                InputProps={
                  Object {
                    "classes": Object {
                      "root": "input",
                      "underline": "underline",
                    },
                  }
                }
                className="description"
                label="Dashboard description"
                multiline={true}
                name="Dashboard description input"
                onChange={[Function]}
                required={false}
                select={false}
                value="The blue one"
                variant="filled"
              />,
            ],
            "className": "titledesc",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "title",
                "filled": true,
                "label": "Dashboard title",
                "name": "Dashboard title input",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "type": "text",
                "value": "Rainbow Dash",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "InputProps": Object {
                  "classes": Object {
                    "root": "input",
                    "underline": "underline",
                  },
                },
                "className": "description",
                "label": "Dashboard description",
                "multiline": true,
                "name": "Dashboard description input",
                "onChange": [Function],
                "required": false,
                "select": false,
                "value": "The blue one",
                "variant": "filled",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <itemselector />,
            "className": "itemSelector",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "itemselector",
          },
          "type": "div",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

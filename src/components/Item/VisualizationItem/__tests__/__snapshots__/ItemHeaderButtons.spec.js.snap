// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VisualizationItemHeaderButtons
    activeFooter={false}
    activeType="CHART"
    item={
      Object {
        "chart": Object {
          "domainType": "AGGREGATE",
          "type": "NOT_YOY",
        },
        "type": "CHART",
      }
    }
    onSelectVisualization={[Function]}
    onToggleFooter={[Function]}
    visualization={
      Object {
        "type": "SINGLE_VALUE",
      }
    }
  >
    My Little Pony
  </VisualizationItemHeaderButtons>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <React.Fragment>
          <ItemHeaderButton
            onClick={[Function]}
            style={
              Object {
                "border": "1px solid #f3f5f7",
                "borderRadius": "2px",
                "padding": "7px 6px 1px 6px",
              }
            }
          >
            <pure(MessageIcon)
              style={
                Object {
                  "fill": "#a0adba",
                  "height": "24px",
                  "width": "24px",
                }
              }
            />
          </ItemHeaderButton>
        </React.Fragment>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ItemHeaderButton
            onClick={[Function]}
            style={
              Object {
                "border": "1px solid #f3f5f7",
                "borderRadius": "2px",
                "padding": "7px 6px 1px 6px",
              }
            }
          >
            <pure(MessageIcon)
              style={
                Object {
                  "fill": "#a0adba",
                  "height": "24px",
                  "width": "24px",
                }
              }
            />
          </ItemHeaderButton>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <pure(MessageIcon)
              style={
                Object {
                  "fill": "#a0adba",
                  "height": "24px",
                  "width": "24px",
                }
              }
            />,
            "onClick": [Function],
            "style": Object {
              "border": "1px solid #f3f5f7",
              "borderRadius": "2px",
              "padding": "7px 6px 1px 6px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Object {
                "fill": "#a0adba",
                "height": "24px",
                "width": "24px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": Symbol(react.fragment),
      },
      null,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <React.Fragment>
            <ItemHeaderButton
              onClick={[Function]}
              style={
                Object {
                  "border": "1px solid #f3f5f7",
                  "borderRadius": "2px",
                  "padding": "7px 6px 1px 6px",
                }
              }
            >
              <pure(MessageIcon)
                style={
                  Object {
                    "fill": "#a0adba",
                    "height": "24px",
                    "width": "24px",
                  }
                }
              />
            </ItemHeaderButton>
          </React.Fragment>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ItemHeaderButton
              onClick={[Function]}
              style={
                Object {
                  "border": "1px solid #f3f5f7",
                  "borderRadius": "2px",
                  "padding": "7px 6px 1px 6px",
                }
              }
            >
              <pure(MessageIcon)
                style={
                  Object {
                    "fill": "#a0adba",
                    "height": "24px",
                    "width": "24px",
                  }
                }
              />
            </ItemHeaderButton>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <pure(MessageIcon)
                style={
                  Object {
                    "fill": "#a0adba",
                    "height": "24px",
                    "width": "24px",
                  }
                }
              />,
              "onClick": [Function],
              "style": Object {
                "border": "1px solid #f3f5f7",
                "borderRadius": "2px",
                "padding": "7px 6px 1px 6px",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Object {
                  "fill": "#a0adba",
                  "height": "24px",
                  "width": "24px",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": Symbol(react.fragment),
        },
        null,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

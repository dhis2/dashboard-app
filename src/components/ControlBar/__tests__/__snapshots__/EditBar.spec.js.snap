// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditBar renders the EditBar 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Go to dashboards
      </Button>
    </div>
  </div>
</Fragment>
`;

exports[`EditBar when update access is false renders only the Discard button 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Go to dashboards
      </Button>
    </div>
  </div>
</Fragment>
`;

exports[`EditBar when update access is true when dashboard id property provided renders Save, Translate and Discard buttons and the TranslationDialog but not ConfirmDeleteDialog 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <Button
          dataTest="save-dashboard-button"
          onClick={[Function]}
          primary={true}
          type="button"
        >
          Save changes
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Print preview
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Translate
        </Button>
      </ButtonStrip>
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Exit without saving
      </Button>
    </div>
  </div>
  <MockTranslationDialog
    className="translation-dialog"
    d2={
      Object {
        "currentUser": Object {
          "firstName": "Mark the Ghost",
          "surname": "Polak",
          "userSettings": Object {
            "get": [Function],
          },
        },
      }
    }
    fieldsToTranslate={
      Array [
        "name",
        "description",
      ]
    }
    objectToTranslate={
      Object {
        "id": "rainbow123",
        "modelDefinition": Object {
          "name": "dashboard",
        },
      }
    }
    onRequestClose={[Function]}
    onTranslationError={[Function]}
    onTranslationSaved={[Function]}
    open={false}
  />
</Fragment>
`;

exports[`EditBar when update access is true when dashboard id property provided when TRANSLATE button is clicked shows the translate dialog 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <Button
          dataTest="save-dashboard-button"
          onClick={[Function]}
          primary={true}
          type="button"
        >
          Save changes
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Print preview
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Translate
        </Button>
      </ButtonStrip>
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Exit without saving
      </Button>
    </div>
  </div>
  <MockTranslationDialog
    className="translation-dialog"
    d2={
      Object {
        "currentUser": Object {
          "firstName": "Mark the Ghost",
          "surname": "Polak",
          "userSettings": Object {
            "get": [Function],
          },
        },
      }
    }
    fieldsToTranslate={
      Array [
        "name",
        "description",
      ]
    }
    objectToTranslate={
      Object {
        "id": "rainbow123",
        "modelDefinition": Object {
          "name": "dashboard",
        },
      }
    }
    onRequestClose={[Function]}
    onTranslationError={[Function]}
    onTranslationSaved={[Function]}
    open={false}
  />
</Fragment>
`;

exports[`EditBar when update access is true when dashboard id property provided when TRANSLATE button is clicked shows the translate dialog 2`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <Button
          dataTest="save-dashboard-button"
          onClick={[Function]}
          primary={true}
          type="button"
        >
          Save changes
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Print preview
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Translate
        </Button>
      </ButtonStrip>
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Exit without saving
      </Button>
    </div>
  </div>
  <MockTranslationDialog
    className="translation-dialog"
    d2={
      Object {
        "currentUser": Object {
          "firstName": "Mark the Ghost",
          "surname": "Polak",
          "userSettings": Object {
            "get": [Function],
          },
        },
      }
    }
    fieldsToTranslate={
      Array [
        "name",
        "description",
      ]
    }
    objectToTranslate={
      Object {
        "id": "rainbow123",
        "modelDefinition": Object {
          "name": "dashboard",
        },
      }
    }
    onRequestClose={[Function]}
    onTranslationError={[Function]}
    onTranslationSaved={[Function]}
    open={true}
  />
</Fragment>
`;

exports[`EditBar when update access is true when dashboard id property provided when deleteAccess is true renders Translate, Delete, and Discard buttons and ConfirmDeleteDialog 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <Button
          dataTest="save-dashboard-button"
          onClick={[Function]}
          primary={true}
          type="button"
        >
          Save changes
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Print preview
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Translate
        </Button>
        <Button
          dataTest="delete-dashboard-button"
          onClick={[Function]}
          type="button"
        >
          Delete
        </Button>
      </ButtonStrip>
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Exit without saving
      </Button>
    </div>
  </div>
  <ConfirmDeleteDialog
    onContinueEditing={[Function]}
    onDeleteConfirmed={[Function]}
    open={false}
  />
</Fragment>
`;

exports[`EditBar when update access is true when no dashboard id property renders Save and Discard buttons but no dialogs 1`] = `
<Fragment>
  <div
    className="editBar"
  >
    <div
      className="controls"
    >
      <ButtonStrip
        dataTest="dhis2-uicore-buttonstrip"
      >
        <Button
          dataTest="save-dashboard-button"
          onClick={[Function]}
          primary={true}
          type="button"
        >
          Save changes
        </Button>
        <Button
          dataTest="dhis2-uicore-button"
          onClick={[Function]}
          type="button"
        >
          Print preview
        </Button>
      </ButtonStrip>
      <Button
        dataTest="dhis2-uicore-button"
        onClick={[Function]}
        secondary={true}
        type="button"
      >
        Exit without saving
      </Button>
    </div>
  </div>
</Fragment>
`;
